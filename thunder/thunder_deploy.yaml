apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: thunder-deployment
  template: thunder-deployment-template
metadata:
  name: thunder-deployment
  namespace: openshift
objects:

#Allow containers to run as root
- apiVersion: security.openshift.io/v1
  kind: SecurityContextConstraints
  metadata:
    name: anyuid
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
  priority: 10
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - MKNOD
  runAsUser:
    type: RunAsAny
  seLinuxContext:
    type: MustRunAs
  supplementalGroups:
    type: RunAsAny
  users:
  - system:serviceaccount:thunder:default
  allowHostDirVolumePlugin: false
  allowHostIPC: false
  allowHostNetwork: false
  allowHostPID: false
  allowHostPorts: false
  allowPrivilegeEscalation: true
  allowPrivilegedContainer: false
  allowedCapabilities: null
  defaultAddCapabilities: null
  fsGroup:
    type: RunAsAny
  groups:
  - system:cluster-admins

#Thunder Deployment
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: thunder-deployment
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    replicas: 1
    selector:
      app: thunder-deployment
      deploymentconfig: thunder-deployment
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: thunder-deployment
          deploymentconfig: thunder-deployment
      spec:
        containers:
          - image: docker-registry.default.svc/jenkins-ci/thunder-alpine
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /core/install.php
                port: 80
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 60
            name: thunder-deployment
            ports:
              - containerPort: 80
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /core/install.php
                port: 80
                scheme: HTTP
              initialDelaySeconds: 20
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 60
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${GUARANT_CPU}
                memory: ${GUARANT_MEMORY}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - thunder-deployment
          from:
            kind: ImageStreamTag
            name: 'thunder-alpine:latest'
            namespace: jenkins-ci
          lastTriggeredImage: docker-registry.default.svc/jenkins-ci/thunder-alpine
        type: ImageChange
        
# Thunder Deploymen Autoscaling
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: thunder-deployment
      template: thunder-deployment-template
    name: thunder-deployment
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    maxReplicas: 3
    minReplicas: 1
    scaleTargetRef:
      apiVersion: v1
      kind: DeploymentConfig
      name: thunder-deployment
    targetCPUUtilizationPercentage: 70

#Create Service for Deployment
- apiVersion: v1
  kind: Service
  metadata:
    name: thunder-service
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    ports:
      - name: 80-tcp
        port: 80
        protocol: TCP
        targetPort: 80
    selector:
      deploymentconfig: thunder-deployment
    sessionAffinity: None
    type: ClusterIP

#Create route to Service
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: thunder-deployment
      template: thunder-deployment-template
    name: thunder-route
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    port:
      targetPort: 80-tcp
    to:
      kind: Service
      name: thunder-service
      weight: 100
    wildcardPolicy: None


parameters:
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: THUNDER_PROJECT_NAME
  value: "thunder"
- description: Jenkins Storage type.
  displayName: Jenkins Starage
  name: STORAGE_ACCSESS_MODE
  value: "ReadWriteOnce"
- description: Jenkins Storage Size.
  displayName: Jenkins Starage Size
  name: STORAGE_SIZE
  value: "1Gi"
- description: The minimum amount of CPU the container is guaranteed.
  displayName: CPU Gauraneed
  name: GUARANT_CPU
  value: 100m
- description: The maximum amount of CPU the container is allowed to use when running.
  displayName: CPU Limit
  name: CPU_LIMIT
  value: 500m
- description: The maximum amount of memory the container is allowed to use when running.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: The minimum amount of memory the container is guaranteed.
  displayName: Memory Gauraneed
  name: GUARANT_MEMORY
  value: 256Mi