apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: mysql-deployment
  template: mysql-deployment-template
metadata:
  name: mysql-deployment
  namespace: openshift
objects:

#Create Secrets
- apiVersion: v1
  kind: Secret
  metadata:
    name: '${DATABASE_SERVICE_NAME}'
    namespace: ${THUNDER_PROJECT_NAME}
  stringData:
    database-name: '${MYSQL_DATABASE}'
    database-password: '${MYSQL_PASSWORD}'
    database-root-password: '${MYSQL_ROOT_PASSWORD}'
    database-user: '${MYSQL_USER}'

#Create MYSQL Service
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: 'mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}'
    name: '${DATABASE_SERVICE_NAME}'
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    ports:
      - name: mysql
        port: 3306
    selector:
      name: '${DATABASE_SERVICE_NAME}'

#Create Storage for MYSQL
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: '${DATABASE_SERVICE_NAME}'
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: '${VOLUME_CAPACITY}'

#MYSQL Deployment
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: '${DATABASE_SERVICE_NAME}'
    namespace: ${THUNDER_PROJECT_NAME}
  spec:
    replicas: 1
    selector:
      name: '${DATABASE_SERVICE_NAME}'
    strategy:
      recreateParams:
        timeoutSeconds: 2400
      type: Recreate
    template:
      metadata:
        labels:
          name: '${DATABASE_SERVICE_NAME}'
      spec:
        containers:
          - env:
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: '${DATABASE_SERVICE_NAME}'
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: '${DATABASE_SERVICE_NAME}'
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-root-password
                    name: '${DATABASE_SERVICE_NAME}'
              - name: MYSQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    key: database-name
                    name: '${DATABASE_SERVICE_NAME}'
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql
            ports:
              - containerPort: 3306
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u
                    $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${GUARANT_CPU}
                memory: ${GUARANT_MEMORY}
            volumeMounts:
              - mountPath: /var/lib/mysql/data
                name: '${DATABASE_SERVICE_NAME}-data'
        volumes:
          - name: '${DATABASE_SERVICE_NAME}-data'
            persistentVolumeClaim:
              claimName: '${DATABASE_SERVICE_NAME}'
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - mysql
          from:
            kind: ImageStreamTag
            name: 'mysql:${MYSQL_VERSION}'
            namespace: '${NAMESPACE}'
        type: ImageChange
      - type: ConfigChange

parameters:
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: JENKINS_PROJECT_NAME
  # value: "jenkins-ci"
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: THUNDER_PROJECT_NAME
  # value: "thunder"
- description: The minimum amount of CPU the container is guaranteed.
  displayName: CPU Gauraneed
  name: GUARANT_CPU
  value: 500m
- description: The maximum amount of CPU the container is allowed to use when running.
  displayName: CPU Limit
  name: CPU_LIMIT
  value: 500m
- description: The maximum amount of memory the container is allowed to use when running.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: The minimum amount of memory the container is guaranteed.
  displayName: Memory Gauraneed
  name: GUARANT_MEMORY
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL Connection Username
  from: 'user[A-Z0-9]{3}'
  generate: expression
  name: MYSQL_USER
  required: true
- description: Password for the MySQL connection user.
  displayName: MySQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
- description: Password for the MySQL root user.
  displayName: MySQL root user Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_ROOT_PASSWORD
  required: true
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: sampledb
- description: 'Volume space available for data, e.g. 512Mi, 2Gi.'
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: 'Version of MySQL image to be used (5.7, or latest).'
  displayName: Version of MySQL Image
  name: MYSQL_VERSION
  required: true
  value: '5.7'